<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	default-lazy-init="true"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<description>Shiro Configuration</description>

    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:database.properties" />
	
	<!-- 定义Shiro安全管理配置 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="cacheManager" ref="redisCacheManager" />
		<property name="sessionManager" ref="sessionManager"></property>
		<!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
		<property name="realm" ref="systemAuthorizingRealm" />
		<!--  cas 认证
		<property name="realm" ref="casRealm" />-->
	</bean>
	
	<!-- 会话管理配置 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionDAO" ref="redisShiroSessionDAO"></property>
		<!-- 会话超时时间，单位：毫秒  -->
		<property name="globalSessionTimeout" value="1800000"></property>
		
		<!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   -->
		<property name="sessionValidationInterval" value="120000"/>
 		<property name="sessionValidationSchedulerEnabled" value="true"/>
		
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
		<property name="sessionIdCookieEnabled" value="true"/>
	</bean>
	
	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
		当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg name="name" value="SHAREJSESSIONID"/>
	</bean>
	
	<bean id="redisManager" class="com.hf.spring.jpa.common.security.shiro.session.RedisManager"></bean>
	<!-- 自定义redisManager-redis -->  
    <bean id="redisCacheManager" class="com.hf.spring.jpa.common.security.shiro.session.RedisCacheManager">  
        <property name="redisManager" ref="redisManager" />
    </bean>
    <!-- 自定义cacheManager -->  
    <bean id="redisCache" class="com.hf.spring.jpa.common.security.shiro.session.RedisCache">  
        <constructor-arg ref="redisManager"></constructor-arg>  
    </bean> 
	 <!-- session会话存储的实现类 -->
    <bean id="redisShiroSessionDAO" class="com.hf.spring.jpa.common.security.shiro.session.RedisSessionDAO">  
        <property name="redisManager" ref="redisManager" />  
    </bean> 
    
	<!-- 自定义Session存储容器 -->
	<!-- 设置Session缓存名字，默认就是shiro-activeSessionCache
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache"></property>
	</bean>-->
	<!-- 定义授权缓存管理器 
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/> 
    </bean>-->
    
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>		

	<!-- Shiro权限过滤过滤器定义 -->
	<bean name="shiroFilterChainDefinitions" class="java.lang.String">
		<constructor-arg>
			<value>
				/static/** = anon
				/userfiles/** = anon
				/cas=cas
				/sys/login =authc,ssl
				/sys/logout =logout
				/**=user
			</value>
		</constructor-arg>
	</bean>
	
	<!-- 安全认证过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/sys/login" />
		<!-- cas登录地址
		<property name="loginUrl" value="https://localhost:8444/cas-server/login?service=https://localhost:8443/HelloMaven/cas" />
		-->
		<property name="successUrl" value="/sys/f"/>
		<property name="filters">
			<util:map>
            	<entry key="ssl" value-ref="sslFilter"/>
            	<entry key="cas" value-ref="casFilter"/>
            	<entry key="authc" value-ref="formAuthenticationFilter"></entry>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<ref bean="shiroFilterChainDefinitions"/>
		</property>
	</bean>
	
	<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
	</bean>
	
	<bean id="sslFilter" class="org.apache.shiro.web.filter.authz.SslFilter">  
    	<property name="port" value="8443"/>  
	</bean> 
	
	<bean id="casRealm" class="com.hf.spring.jpa.common.realm.MyCasRealm">  
	    <property name="casServerUrlPrefix" value="https://localhost:8444/cas-server"/>  
	    <property name="casService" value="https://localhost:8443/HelloMaven/cas"/>  
	</bean>
	
	<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">  
	    <property name="failureUrl" value="/sys/login"/>  
	</bean>  
</beans>